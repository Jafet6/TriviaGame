{"ast":null,"code":"import _classCallCheck from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";/* eslint-disable react/prop-types */import React,{Component}from'react';import{Link}from'react-router-dom';import{connect}from'react-redux';import'./feedback.style.css';var renderButtons=function renderButtons(){return React.createElement(\"div\",null,React.createElement(\"div\",null,React.createElement(Link,{to:\"/ranking\"},React.createElement(\"button\",{type:\"button\",className:\"feedback-button-ranking\",\"data-testid\":\"btn-ranking\"},\"VER RANKING\"))),React.createElement(\"div\",null,React.createElement(Link,{to:\"/\"},React.createElement(\"button\",{type:\"button\",className:\"feedback-button-playagain\",\"data-testid\":\"btn-play-again\"},\"JOGAR NOVAMENTE\"))));};var feedbackPos=function feedbackPos(){return React.createElement(\"div\",null,React.createElement(\"h1\",{\"data-testid\":\"feedback-text\"},\"Mandou bem!\"));};var feedbackNeg=function feedbackNeg(){return React.createElement(\"div\",null,React.createElement(\"h1\",{\"data-testid\":\"feedback-text\"},\"Podia ser melhor...\"));};var renderScore=function renderScore(playerAnswers,playerScore){return React.createElement(\"div\",null,React.createElement(\"h2\",null,\"Quest\\xF5es certas:\",' ',React.createElement(\"span\",{\"data-testid\":\"feedback-total-question\"},' ',playerAnswers)),React.createElement(\"h2\",null,\"Pontua\\xE7\\xE3o final:\",' ',React.createElement(\"span\",{\"data-testid\":\"feedback-total-score\"},' ',playerScore)));};var renderFeedbackScreen=function renderFeedbackScreen(playerAnswers,playerScore){return React.createElement(\"div\",null,playerAnswers<3?feedbackNeg():feedbackPos(),renderScore(playerAnswers,playerScore));};var renderHeaderScore=function renderHeaderScore(playerName,playerScore,playerPicture){return React.createElement(\"header\",{className:\"feedback-header\"},React.createElement(\"div\",{style:{display:'flex'}},React.createElement(\"img\",{\"data-testid\":\"header-profile-picture\",className:\"player-profile-img-header\",alt:\"player-profile\",src:playerPicture}),React.createElement(\"p\",{\"data-testid\":\"header-player-name\"},\"Jogador:\",React.createElement(\"strong\",null,playerName))),React.createElement(\"div\",null,React.createElement(\"p\",null,\"Pontos:\",React.createElement(\"strong\",{\"data-testid\":\"header-score\"},playerScore))));};var Feedback=/*#__PURE__*/function(_Component){_inherits(Feedback,_Component);function Feedback(){_classCallCheck(this,Feedback);return _possibleConstructorReturn(this,_getPrototypeOf(Feedback).apply(this,arguments));}_createClass(Feedback,[{key:\"render\",value:function render(){var _this$props=this.props,playerAnswers=_this$props.playerAnswers,playerName=_this$props.playerName,playerPicture=_this$props.playerPicture,playerScore=_this$props.playerScore;return React.createElement(\"div\",{className:\"header-container\"},renderHeaderScore(playerName,playerScore,playerPicture),React.createElement(\"div\",{className:\"score-container\"},renderFeedbackScreen(playerAnswers,playerScore),renderButtons()));}}]);return Feedback;}(Component);var mapStateToProps=function mapStateToProps(state){return{playerName:state.playersInfoReducer.username,playerScore:parseFloat(state.questionsDataReducer.points),playerAnswers:state.questionsDataReducer.assertions,playerPicture:state.gravatarReducer.picture.url};};export default connect(mapStateToProps)(Feedback);","map":{"version":3,"sources":["/home/jafet/GithubPages/triviaGame/src/components/FeedbackPage/feedback.jsx"],"names":["React","Component","Link","connect","renderButtons","feedbackPos","feedbackNeg","renderScore","playerAnswers","playerScore","renderFeedbackScreen","renderHeaderScore","playerName","playerPicture","display","Feedback","props","mapStateToProps","state","playersInfoReducer","username","parseFloat","questionsDataReducer","points","assertions","gravatarReducer","picture","url"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './feedback.style.css';\n\nconst renderButtons = () => (\n  <div>\n    <div>\n      <Link to=\"/ranking\">\n        <button\n          type=\"button\"\n          className=\"feedback-button-ranking\"\n          data-testid=\"btn-ranking\"\n        >\n          VER RANKING\n        </button>\n      </Link>\n    </div>\n    <div>\n      <Link to=\"/\">\n        <button\n          type=\"button\"\n          className=\"feedback-button-playagain\"\n          data-testid=\"btn-play-again\"\n        >\n          JOGAR NOVAMENTE\n        </button>\n      </Link>\n    </div>\n  </div>\n);\n\nconst feedbackPos = () => (\n  <div>\n    <h1 data-testid=\"feedback-text\">Mandou bem!</h1>\n  </div>\n);\n\nconst feedbackNeg = () => (\n  <div>\n    <h1 data-testid=\"feedback-text\">Podia ser melhor...</h1>\n  </div>\n);\n\nconst renderScore = (playerAnswers, playerScore) => (\n  <div>\n    <h2>\n      Questões certas:\n      {' '}\n      <span data-testid=\"feedback-total-question\">\n        {' '}\n        {playerAnswers}\n      </span>\n    </h2>\n    <h2>\n      Pontuação final:\n      {' '}\n      <span data-testid=\"feedback-total-score\">\n        {' '}\n        {playerScore}\n      </span>\n    </h2>\n  </div>\n);\n\nconst renderFeedbackScreen = (playerAnswers, playerScore) => (\n  <div>\n    {playerAnswers < 3 ? feedbackNeg() : feedbackPos()}\n    {renderScore(playerAnswers, playerScore)}\n  </div>\n);\n\nconst renderHeaderScore = (playerName, playerScore, playerPicture) => (\n  <header className=\"feedback-header\">\n    <div style={{ display: 'flex' }}>\n      <img\n        data-testid=\"header-profile-picture\"\n        className=\"player-profile-img-header\"\n        alt=\"player-profile\"\n        src={playerPicture}\n      />\n      <p data-testid=\"header-player-name\">\n        Jogador:\n        <strong>{playerName}</strong>\n      </p>\n    </div>\n    <div>\n      <p>\n        Pontos:\n        <strong data-testid=\"header-score\">{playerScore}</strong>\n      </p>\n    </div>\n  </header>\n);\n\nclass Feedback extends Component {\n  render() {\n    const {\n      // eslint-disable-next-line react/prop-types\n      playerAnswers,\n      playerName,\n      playerPicture,\n      playerScore,\n    } = this.props;\n    return (\n      <div className=\"header-container\">\n        {renderHeaderScore(playerName, playerScore, playerPicture)}\n        <div className=\"score-container\">\n          {renderFeedbackScreen(playerAnswers, playerScore)}\n          {renderButtons()}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  playerName: state.playersInfoReducer.username,\n  playerScore: parseFloat(state.questionsDataReducer.points),\n  playerAnswers: state.questionsDataReducer.assertions,\n  playerPicture: state.gravatarReducer.picture.url,\n});\n\nexport default connect(mapStateToProps)(Feedback);\n"]},"metadata":{},"sourceType":"module"}