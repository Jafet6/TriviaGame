{"ast":null,"code":"import _classCallCheck from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{connect}from'react-redux';import Header from'./Header';import QuestionsInfos from'./QuestionsInfos';import silvio from'../../silvio.png';import'./GameScreen.style.css';var GameScreen=/*#__PURE__*/function(_React$Component){_inherits(GameScreen,_React$Component);function GameScreen(){_classCallCheck(this,GameScreen);return _possibleConstructorReturn(this,_getPrototypeOf(GameScreen).apply(this,arguments));}_createClass(GameScreen,[{key:\"render\",value:function render(){var questionsArr=this.props.questionsArr;if(questionsArr.length===0)return React.createElement(\"div\",null,\"Loading...\");return React.createElement(\"div\",{className:\"game-screen-container\"},React.createElement(\"div\",{className:\"game-screen-comp\"},React.createElement(QuestionsInfos,null),React.createElement(Header,null)),React.createElement(\"div\",{className:\"silvio-img-container\"},React.createElement(\"div\",null,React.createElement(\"img\",{src:silvio,className:\"silvio-img\",alt:\"silvio santos\"}))));}}]);return GameScreen;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{questionsArr:state.apiQuestionsReducer.questions.results};};export default connect(mapStateToProps)(GameScreen);GameScreen.defaultProps={questionsArr:[]};","map":{"version":3,"sources":["/home/jafet/GithubPages/triviaGame/src/components/GameScreen/GameScreen.js"],"names":["React","connect","Header","QuestionsInfos","silvio","GameScreen","questionsArr","props","length","Component","mapStateToProps","state","apiQuestionsReducer","questions","results","defaultProps"],"mappings":"2wBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,MAAO,wBAAP,C,GAEMC,CAAAA,U,gSACK,IACCC,CAAAA,YADD,CACkB,KAAKC,KADvB,CACCD,YADD,CAEP,GAAIA,YAAY,CAACE,MAAb,GAAwB,CAA5B,CAA+B,MAAO,6CAAP,CAC/B,MACE,4BAAK,SAAS,CAAC,uBAAf,EACE,2BAAK,SAAS,CAAC,kBAAf,EACE,oBAAC,cAAD,MADF,CAEE,oBAAC,MAAD,MAFF,CADF,CAKE,2BAAK,SAAS,CAAC,sBAAf,EACE,+BACE,2BAAK,GAAG,CAAEJ,MAAV,CAAkB,SAAS,CAAC,YAA5B,CAAyC,GAAG,CAAC,eAA7C,EADF,CADF,CALF,CADF,CAaD,C,wBAjBsBJ,KAAK,CAACS,S,EAoB/B,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCL,YAAY,CAAEK,KAAK,CAACC,mBAAN,CAA0BC,SAA1B,CAAoCC,OADhB,CAAZ,EAAxB,CAIA,cAAeb,CAAAA,OAAO,CAACS,eAAD,CAAP,CAAyBL,UAAzB,CAAf,CAOAA,UAAU,CAACU,YAAX,CAA0B,CACxBT,YAAY,CAAE,EADU,CAA1B","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport QuestionsInfos from './QuestionsInfos';\nimport silvio from '../../silvio.png';\nimport './GameScreen.style.css';\n\nclass GameScreen extends React.Component {\n  render() {\n    const { questionsArr } = this.props;\n    if (questionsArr.length === 0) return <div>Loading...</div>;\n    return (\n      <div className=\"game-screen-container\">\n        <div className=\"game-screen-comp\">\n          <QuestionsInfos />\n          <Header />\n        </div>\n        <div className=\"silvio-img-container\">\n          <div>\n            <img src={silvio} className=\"silvio-img\" alt=\"silvio santos\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  questionsArr: state.apiQuestionsReducer.questions.results,\n});\n\nexport default connect(mapStateToProps)(GameScreen);\n\n\nGameScreen.propTypes = {\n  questionsArr: PropTypes.arrayOf(PropTypes.object),\n};\n\nGameScreen.defaultProps = {\n  questionsArr: [],\n};\n"]},"metadata":{},"sourceType":"module"}