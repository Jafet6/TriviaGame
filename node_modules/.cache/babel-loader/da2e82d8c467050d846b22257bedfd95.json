{"ast":null,"code":"import _defineProperty from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{connect}from'react-redux';import{withRouter,Link}from'react-router-dom';import{filtersAction}from'../../actions/filtersAction';import'./Settings.css';var Settings=/*#__PURE__*/function(_React$Component){_inherits(Settings,_React$Component);function Settings(props){var _this;_classCallCheck(this,Settings);_this=_possibleConstructorReturn(this,_getPrototypeOf(Settings).call(this,props));_this.state={filter:{category:'',difficulty:'',type:''}};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));return _this;}_createClass(Settings,[{key:\"handleChange\",value:function handleChange(event){var filter=this.state.filter;var _event$target=event.target,name=_event$target.name,value=_event$target.value;this.setState({filter:_objectSpread({},filter,_defineProperty({},name,value))});}},{key:\"render\",value:function render(){var _this$props=this.props,categories=_this$props.categories,filterDispatch=_this$props.filterDispatch;var _this$state=this.state,category=_this$state.category,type=_this$state.type,difficulty=_this$state.difficulty,filter=_this$state.filter;return React.createElement(\"div\",{className:\"settings-container\"},React.createElement(\"div\",{className:\"settings-content\"},React.createElement(\"h1\",{className:\"setting-title\",\"data-testid\":\"settings-title\"},\"Configura\\xE7\\xF5es\"),React.createElement(\"form\",{className:\"settings-form\"},React.createElement(\"label\",null,\"Catergory\",React.createElement(\"select\",{className:\"settings-config\",name:\"category\",value:category,onChange:this.handleChange},React.createElement(\"option\",{className:\"settings-config\",value:\"\"},\"Any Category\"),categories.map(function(_ref){var id=_ref.id,name=_ref.name;return React.createElement(\"option\",{className:\"settings-config\",value:id,key:id},name);}))),React.createElement(\"label\",null,\"Type\",React.createElement(\"select\",{className:\"settings-config\",name:\"type\",value:type,onChange:this.handleChange},React.createElement(\"option\",{value:\"\"},\"Any Type\"),React.createElement(\"option\",{value:\"multiple\"},\"Multiple Choice\"),React.createElement(\"option\",{value:\"boolean\"},\"True / False\"))),React.createElement(\"label\",null,\"Difficulty\",React.createElement(\"select\",{className:\"settings-config\",name:\"difficulty\",value:difficulty,onChange:this.handleChange},React.createElement(\"option\",{value:\"\"},\"Any Difficulty\"),React.createElement(\"option\",{value:\"easy\"},\"Easy\"),React.createElement(\"option\",{value:\"medium\"},\"Medium\"),React.createElement(\"option\",{value:\"hard\"},\"Hard\")))),React.createElement(\"div\",{className:\"filter-container\"},React.createElement(Link,{to:\"/\"},React.createElement(\"button\",{className:\"settings-choosed\",type:\"button\",onClick:function onClick(){return filterDispatch(filter);}},\"Aplicar Filtro\")))));}}]);return Settings;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{categories:state.apiCategoriesReducer.categories};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{filterDispatch:function filterDispatch(filterObj){return dispatch(filtersAction(filterObj));}};};export default withRouter(connect(mapStateToProps,mapDispatchToProps)(Settings));","map":{"version":3,"sources":["/home/jafet/GithubPages/triviaGame/src/components/SettingsPage/Settings.js"],"names":["React","connect","withRouter","Link","filtersAction","Settings","props","state","filter","category","difficulty","type","handleChange","bind","event","target","name","value","setState","categories","filterDispatch","map","id","Component","mapStateToProps","apiCategoriesReducer","mapDispatchToProps","dispatch","filterObj"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, Link } from 'react-router-dom';\nimport { filtersAction } from '../../actions/filtersAction';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: {\n        category: '',\n        difficulty: '',\n        type: '',\n      },\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const { filter } = this.state;\n    const { name, value } = event.target;\n    this.setState({\n      filter: {\n        ...filter,\n        [name]: value,\n      },\n    });\n  }\n\n  render() {\n    const { categories, filterDispatch } = this.props;\n    const {\n      category, type, difficulty, filter,\n    } = this.state;\n    return (\n      <div className=\"settings-container\">\n        <div className=\"settings-content\">\n          <h1 className=\"setting-title\" data-testid=\"settings-title\">Configurações</h1>\n          <form className=\"settings-form\">\n            <label>\n              Catergory\n              <select className=\"settings-config\" name=\"category\" value={category} onChange={this.handleChange}>\n                <option className=\"settings-config\" value=\"\">Any Category</option>\n                {categories.map(({ id, name }) => (<option className=\"settings-config\" value={id} key={id}>{name}</option>))}\n              </select>\n            </label>\n            <label>\n              Type\n              <select className=\"settings-config\" name=\"type\" value={type} onChange={this.handleChange}>\n                <option value=\"\">Any Type</option>\n                <option value=\"multiple\">Multiple Choice</option>\n                <option value=\"boolean\">True / False</option>\n              </select>\n            </label>\n            <label>\n              Difficulty\n              <select className=\"settings-config\" name=\"difficulty\" value={difficulty} onChange={this.handleChange}>\n                <option value=\"\">Any Difficulty</option>\n                <option value=\"easy\">Easy</option>\n                <option value=\"medium\">Medium</option>\n                <option value=\"hard\">Hard</option>\n              </select>\n            </label>\n          </form>\n          <div className=\"filter-container\">\n            <Link to=\"/\">\n              <button className=\"settings-choosed\" type=\"button\" onClick={() => filterDispatch(filter)}>\n                Aplicar Filtro\n              </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  categories: state.apiCategoriesReducer.categories,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  filterDispatch: (filterObj) => dispatch(filtersAction(filterObj)),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Settings));\n"]},"metadata":{},"sourceType":"module"}