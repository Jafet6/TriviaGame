{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-project-trivia-react-redux-06/src/components/GameScreen/ShuffledButtons.js\";\nimport React from 'react';\n\nclass ShuffledButtons extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.arrWithAllButtons = objQuestion => {\n      const incorrect_answers = objQuestion.incorrect_answers;\n      const incorrectAnswersArr = incorrect_answers.map((e, index) => React.createElement(\"button\", {\n        onClick: () => this.checkAnswer(e),\n        \"data-testid\": `wrong-answer-${index}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, e));\n      const allAnswers = [React.createElement(\"button\", {\n        onClick: () => this.checkAnswer(objQuestion.correct_answer),\n        \"data-testid\": \"correct-answer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, objQuestion.correct_answer), ...incorrectAnswersArr];\n      return allAnswers;\n    };\n\n    this.shuffleAnswers = array => {\n      let currentIndex = array.length;\n      let temporaryValue = [];\n      let randomIndex;\n\n      while (currentIndex !== 0) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      return array;\n    };\n  }\n\n  render() {\n    const question = this.props.question;\n    console.log(question);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.shuffleAnswers(this.arrWithAllButtons(question)).map(e => React.createElement(\"div\", {\n      key: e.props.children,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, e)));\n  }\n\n}\n\nexport default ShuffledButtons;","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-project-trivia-react-redux-06/src/components/GameScreen/ShuffledButtons.js"],"names":["React","ShuffledButtons","Component","arrWithAllButtons","objQuestion","incorrect_answers","incorrectAnswersArr","map","e","index","checkAnswer","allAnswers","correct_answer","shuffleAnswers","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","render","question","props","console","log","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAN,SAA8BD,KAAK,CAACE,SAApC,CAA8C;AAAA;AAAA;;AAAA,SAM5CC,iBAN4C,GAMvBC,WAAD,IAAiB;AAAA,YAC3BC,iBAD2B,GACLD,WADK,CAC3BC,iBAD2B;AAGnC,YAAMC,mBAAmB,GAAGD,iBAAiB,CAACE,GAAlB,CAAsB,CAACC,CAAD,EAAIC,KAAJ,KAC/C;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKC,WAAL,CAAiBF,CAAjB,CAAvB;AAA4C,uBAAc,gBAAeC,KAAM,EAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmFD,CAAnF,CADyB,CAA5B;AAGA,YAAMG,UAAU,GAAG,CACnB;AACE,QAAA,OAAO,EAAE,MAAM,KAAKD,WAAL,CAAiBN,WAAW,CAACQ,cAA7B,CADjB;AAEE,uBAAY,gBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGKR,WAAW,CAACQ,cAHjB,CADmB,EAMnB,GAAGN,mBANgB,CAAnB;AAQA,aAAOK,UAAP;AACD,KArB2C;;AAAA,SAuB5CE,cAvB4C,GAuB1BC,KAAD,IAAW;AAC1B,UAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;AACA,UAAIC,cAAc,GAAG,EAArB;AACA,UAAIC,WAAJ;;AAEA,aAAOH,YAAY,KAAK,CAAxB,EAA2B;AACzBG,QAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,YAA3B,CAAd;AACAA,QAAAA,YAAY,IAAI,CAAhB;AAEAE,QAAAA,cAAc,GAAGH,KAAK,CAACC,YAAD,CAAtB;AACAD,QAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACI,WAAD,CAA3B;AACAJ,QAAAA,KAAK,CAACI,WAAD,CAAL,GAAqBD,cAArB;AACD;;AACD,aAAOH,KAAP;AACD,KArC2C;AAAA;;AAsC5CQ,EAAAA,MAAM,GAAG;AAAA,UACCC,QADD,GACc,KAAKC,KADnB,CACCD,QADD;AAEPE,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKV,cAAL,CAAoB,KAAKV,iBAAL,CAAuBoB,QAAvB,CAApB,EAAsDhB,GAAtD,CAA2DC,CAAD,IACxD;AAAK,MAAA,GAAG,EAAEA,CAAC,CAACgB,KAAF,CAAQG,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BnB,CAA7B,CADF,CADH,CADF;AAOD;;AAhD2C;;AAmD9C,eAAeP,eAAf","sourcesContent":["import React from 'react';\n\nclass ShuffledButtons extends React.Component {\n\n  // checkAnswer = (stringToTest) => {\n  //   if\n  // }\n  \n  arrWithAllButtons = (objQuestion) => {\n    const { incorrect_answers } = objQuestion;\n  \n    const incorrectAnswersArr = incorrect_answers.map((e, index) => \n      (<button onClick={() => this.checkAnswer(e)} data-testid={`wrong-answer-${index}`}>{e}</button>));\n  \n    const allAnswers = [\n    <button\n      onClick={() => this.checkAnswer(objQuestion.correct_answer)}\n      data-testid=\"correct-answer\">\n        {objQuestion.correct_answer}\n    </button>,\n    ...incorrectAnswersArr,\n    ];\n    return allAnswers;\n  }\n  \n  shuffleAnswers = (array) => {\n    let currentIndex = array.length;\n    let temporaryValue = [];\n    let randomIndex;\n  \n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  }\n  render() {\n    const { question } = this.props;\n    console.log(question)\n    return (\n      <div>\n        {this.shuffleAnswers(this.arrWithAllButtons(question)).map((e) =>\n          (<div key={e.props.children}>{e}</div>))\n        }\n      </div>\n    )\n  }\n}\n\nexport default ShuffledButtons;\n"]},"metadata":{},"sourceType":"module"}