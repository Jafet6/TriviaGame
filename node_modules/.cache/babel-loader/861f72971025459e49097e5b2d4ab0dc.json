{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-project-trivia-react-redux-06/src/components/GameScreen/GravatarIMGController.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst GravatarIMGController = props => {\n  const profilePicGravatar = props.profilePicGravatar;\n\n  if (profilePicGravatar.url !== '') {\n    return React.createElement(\"img\", {\n      \"data-testid\": \"header-profile-picture\",\n      src: profilePicGravatar.url,\n      alt: \"profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"img\", {\n    \"data-testid\": \"header-profile-picture\",\n    src: \"http://www.gravatar.com/avatar\",\n    alt: \"Default Profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  });\n};\n\nconst mapStateToProps = state => ({\n  profilePicGravatar: state.gravatarReducer.picture\n});\n\nexport default connect(mapStateToProps)(GravatarIMGController);\nGravatarIMGController.propTypes = {\n  profilePicGravatar: PropTypes.objectOf(PropTypes.any)\n};\nGravatarIMGController.defaultProps = {\n  profilePicGravatar: {}\n};","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-project-trivia-react-redux-06/src/components/GameScreen/GravatarIMGController.js"],"names":["React","connect","PropTypes","GravatarIMGController","props","profilePicGravatar","url","mapStateToProps","state","gravatarReducer","picture","propTypes","objectOf","any","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;AAAA,QAC/BC,kBAD+B,GACRD,KADQ,CAC/BC,kBAD+B;;AAEvC,MAAIA,kBAAkB,CAACC,GAAnB,KAA2B,EAA/B,EAAmC;AACjC,WACE;AAAK,qBAAY,wBAAjB;AAA0C,MAAA,GAAG,EAAED,kBAAkB,CAACC,GAAlE;AAAuE,MAAA,GAAG,EAAC,SAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AACD,SACE;AACE,mBAAY,wBADd;AAEE,IAAA,GAAG,EAAC,gCAFN;AAGE,IAAA,GAAG,EAAC,iBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAOD,CAdD;;AAgBA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCH,EAAAA,kBAAkB,EAAEG,KAAK,CAACC,eAAN,CAAsBC;AADR,CAAZ,CAAxB;;AAIA,eAAeT,OAAO,CAACM,eAAD,CAAP,CAAyBJ,qBAAzB,CAAf;AAEAA,qBAAqB,CAACQ,SAAtB,GAAkC;AAChCN,EAAAA,kBAAkB,EAAEH,SAAS,CAACU,QAAV,CAAmBV,SAAS,CAACW,GAA7B;AADY,CAAlC;AAIAV,qBAAqB,CAACW,YAAtB,GAAqC;AACnCT,EAAAA,kBAAkB,EAAE;AADe,CAArC","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst GravatarIMGController = (props) => {\n  const { profilePicGravatar } = props;\n  if (profilePicGravatar.url !== '') {\n    return (\n      <img data-testid=\"header-profile-picture\" src={profilePicGravatar.url} alt=\"profile\" />\n    );\n  }\n  return (\n    <img\n      data-testid=\"header-profile-picture\"\n      src=\"http://www.gravatar.com/avatar\"\n      alt=\"Default Profile\"\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  profilePicGravatar: state.gravatarReducer.picture,\n});\n\nexport default connect(mapStateToProps)(GravatarIMGController);\n\nGravatarIMGController.propTypes = {\n  profilePicGravatar: PropTypes.objectOf(PropTypes.any),\n};\n\nGravatarIMGController.defaultProps = {\n  profilePicGravatar: {},\n};\n"]},"metadata":{},"sourceType":"module"}