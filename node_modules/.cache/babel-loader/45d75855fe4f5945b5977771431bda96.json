{"ast":null,"code":"import _regeneratorRuntime from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _classCallCheck from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import he from'he';import{connect}from'react-redux';import{newQuestionAction}from'../../actions/newQuestionAction';import{timerCountAction}from'../../actions/timerCountAction';import{timeOutAction}from'../../actions/timeOutAction';import{checkAnswerAction}from'../../actions/checkAnswerAction';import'./QuestionsInfos.css';import ShuffledButtons from'./ShuffledButtons';import NextButtonControl from'./NextButtonControl';import logo from'../../show-do-milh√£o.png';import playersInfosLocalStorage from'../../service/functionsService';var QuestionsInfos=/*#__PURE__*/function(_React$Component){_inherits(QuestionsInfos,_React$Component);function QuestionsInfos(props){var _this;_classCallCheck(this,QuestionsInfos);_this=_possibleConstructorReturn(this,_getPrototypeOf(QuestionsInfos).call(this,props));_this.answerChoosed=_this.answerChoosed.bind(_assertThisInitialized(_this));_this.timerFunction=_this.timerFunction.bind(_assertThisInitialized(_this));return _this;}_createClass(QuestionsInfos,[{key:\"componentDidMount\",value:function componentDidMount(){this.timerFunction();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){clearInterval(this.interval);}},{key:\"timerFunction\",value:function timerFunction(){var _this2=this;this.interval=setInterval(function(){var _this2$props=_this2.props,timerCount=_this2$props.timerCount,timer=_this2$props.timer,timeOut=_this2$props.timeOut;if(timer===0){timeOut();return clearInterval(_this2.interval);}return timerCount();},1000);}},{key:\"rankingInfoLocalStorage\",value:function rankingInfoLocalStorage(){var _this$props=this.props,picture=_this$props.picture,score=_this$props.score,name=_this$props.name;var personObject={name:name,score:score,picture:picture};if(localStorage.getItem('ranking')){var _rankingArray=JSON.parse(localStorage.getItem('ranking'));var newRankingArr=_rankingArray.reduce(function(acc,e){if(e.name!==name)acc.push(e);return acc;},[]);newRankingArr.push(personObject);return localStorage.setItem('ranking',JSON.stringify(newRankingArr));}var rankingArray=[];rankingArray.push(personObject);return localStorage.setItem('ranking',JSON.stringify(rankingArray));}},{key:\"answerChoosed\",value:function answerChoosed(event){var dif,_this$props2,timer,checkAnswer,questionsArr,questionIndex,points,assertion,questionAnswer,_this$props3,assertions,score,name,gravatarEmail;return _regeneratorRuntime.async(function answerChoosed$(_context){while(1){switch(_context.prev=_context.next){case 0:dif={hard:3,medium:2,easy:1};_this$props2=this.props,timer=_this$props2.timer,checkAnswer=_this$props2.checkAnswer,questionsArr=_this$props2.questionsArr,questionIndex=_this$props2.questionIndex;points=0;assertion=0;questionAnswer=questionsArr[questionIndex];if(event.target.value===questionAnswer.correct_answer){points=10+timer*dif[questionAnswer.difficulty];assertion=1;}_context.next=8;return _regeneratorRuntime.awrap(checkAnswer(points,assertion));case 8:_this$props3=this.props,assertions=_this$props3.assertions,score=_this$props3.score,name=_this$props3.name,gravatarEmail=_this$props3.gravatarEmail;playersInfosLocalStorage(assertions,score,name,gravatarEmail);this.rankingInfoLocalStorage();return _context.abrupt(\"return\",clearInterval(this.interval));case 12:case\"end\":return _context.stop();}}},null,this);}},{key:\"render\",value:function render(){var _this$props4=this.props,questionIndex=_this$props4.questionIndex,timer=_this$props4.timer,questionsArr=_this$props4.questionsArr;var question=questionsArr[questionIndex];return React.createElement(\"div\",{className:\"questions-display\"},React.createElement(\"section\",null,React.createElement(\"img\",{src:logo,width:\"400px\",alt:\"logo\"}),React.createElement(\"div\",{className:\"questions-container\"},React.createElement(\"div\",{className:\"questions-header\"},React.createElement(\"span\",{\"data-testid\":\"question-category\"},question.category),React.createElement(\"div\",null,React.createElement(\"p\",{\"data-testid\":\"question-text\"},\"\".concat(he.decode(question.question))),React.createElement(\"p\",null,\"Tempo restante: \".concat(timer,\"s\")))),React.createElement(\"div\",{className:\"shuffled-buttons\"},React.createElement(ShuffledButtons,{answerChoosed:this.answerChoosed})),React.createElement(NextButtonControl,{timerFunction:this.timerFunction}))));}}]);return QuestionsInfos;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{questionIndex:state.questionsDataReducer.index,name:state.playersInfoReducer.username,picture:state.gravatarReducer.picture.url,gravatarEmail:state.playersInfoReducer.email,score:state.questionsDataReducer.points,assertions:state.questionsDataReducer.assertions,questionsArr:state.apiQuestionsReducer.questions.results,timer:state.questionsDataReducer.timerCount,wrongAnswerClass:state.questionsDataReducer.wrongAnswerClass};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{setNextQuestion:function setNextQuestion(){return dispatch(newQuestionAction());},timerCount:function timerCount(){return dispatch(timerCountAction());},timeOut:function timeOut(){return dispatch(timeOutAction());},checkAnswer:function checkAnswer(points,assertions){return dispatch(checkAnswerAction(points,assertions));}};};export default connect(mapStateToProps,mapDispatchToProps)(QuestionsInfos);QuestionsInfos.defaultProps={questionsArr:[],picture:'',gravatarEmail:''};","map":{"version":3,"sources":["/home/jafet/GithubPages/triviaGame/src/components/GameScreen/QuestionsInfos.js"],"names":["React","he","connect","newQuestionAction","timerCountAction","timeOutAction","checkAnswerAction","ShuffledButtons","NextButtonControl","logo","playersInfosLocalStorage","QuestionsInfos","props","answerChoosed","bind","timerFunction","clearInterval","interval","setInterval","timerCount","timer","timeOut","picture","score","name","personObject","localStorage","getItem","rankingArray","JSON","parse","newRankingArr","reduce","acc","e","push","setItem","stringify","event","dif","hard","medium","easy","checkAnswer","questionsArr","questionIndex","points","assertion","questionAnswer","target","value","correct_answer","difficulty","assertions","gravatarEmail","rankingInfoLocalStorage","question","category","decode","Component","mapStateToProps","state","questionsDataReducer","index","playersInfoReducer","username","gravatarReducer","url","email","apiQuestionsReducer","questions","results","wrongAnswerClass","mapDispatchToProps","dispatch","setNextQuestion","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport he from 'he';\nimport { connect } from 'react-redux';\nimport { newQuestionAction } from '../../actions/newQuestionAction';\nimport { timerCountAction } from '../../actions/timerCountAction';\nimport { timeOutAction } from '../../actions/timeOutAction';\nimport { checkAnswerAction } from '../../actions/checkAnswerAction';\nimport './QuestionsInfos.css';\nimport ShuffledButtons from './ShuffledButtons';\nimport NextButtonControl from './NextButtonControl';\nimport logo from '../../show-do-milh√£o.png';\nimport playersInfosLocalStorage from '../../service/functionsService';\n\nclass QuestionsInfos extends React.Component {\n  constructor(props) {\n    super(props);\n    this.answerChoosed = this.answerChoosed.bind(this);\n    this.timerFunction = this.timerFunction.bind(this);\n  }\n\n  componentDidMount() {\n    this.timerFunction();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  timerFunction() {\n    this.interval = setInterval(() => {\n      const { timerCount, timer, timeOut } = this.props;\n\n      if (timer === 0) {\n        timeOut();\n        return clearInterval(this.interval);\n      }\n\n      return timerCount();\n    }, 1000);\n  }\n\n  rankingInfoLocalStorage() {\n    const { picture, score, name } = this.props;\n    const personObject = { name, score, picture };\n    if (localStorage.getItem('ranking')) {\n      const rankingArray = JSON.parse(localStorage.getItem('ranking'));\n      const newRankingArr = rankingArray.reduce((acc, e) => {\n        if (e.name !== name) acc.push(e);\n        return acc;\n      }, []);\n      newRankingArr.push(personObject);\n      return localStorage.setItem('ranking', JSON.stringify(newRankingArr));\n    }\n    const rankingArray = [];\n    rankingArray.push(personObject);\n    return localStorage.setItem('ranking', JSON.stringify(rankingArray));\n  }\n\n  async answerChoosed(event) {\n    const dif = {\n      hard: 3,\n      medium: 2,\n      easy: 1,\n    };\n    const {\n      timer, checkAnswer, questionsArr, questionIndex,\n    } = this.props;\n    let points = 0;\n    let assertion = 0;\n    const questionAnswer = questionsArr[questionIndex];\n    if (event.target.value === questionAnswer.correct_answer) {\n      points = 10 + (timer * dif[questionAnswer.difficulty]);\n      assertion = 1;\n    }\n    await checkAnswer(points, assertion);\n    const {\n      assertions, score, name, gravatarEmail,\n    } = this.props;\n    playersInfosLocalStorage(assertions, score, name, gravatarEmail);\n    this.rankingInfoLocalStorage();\n    return clearInterval(this.interval);\n  }\n\n  render() {\n    const { questionIndex, timer, questionsArr } = this.props;\n    const question = questionsArr[questionIndex];\n    return (\n      <div className=\"questions-display\">\n        <section>\n          <img src={logo} width=\"400px\" alt=\"logo\" />\n          <div className=\"questions-container\">\n            <div className=\"questions-header\">\n              <span data-testid=\"question-category\">{question.category}</span>\n              <div>\n                <p data-testid=\"question-text\">{`${he.decode(question.question)}`}</p>\n                <p>\n                  {`Tempo restante: ${timer}s`}\n                </p>\n              </div>\n            </div>\n            <div className=\"shuffled-buttons\">\n              <ShuffledButtons answerChoosed={this.answerChoosed} />\n            </div>\n            <NextButtonControl timerFunction={this.timerFunction} />\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  questionIndex: state.questionsDataReducer.index,\n  name: state.playersInfoReducer.username,\n  picture: state.gravatarReducer.picture.url,\n  gravatarEmail: state.playersInfoReducer.email,\n  score: state.questionsDataReducer.points,\n  assertions: state.questionsDataReducer.assertions,\n  questionsArr: state.apiQuestionsReducer.questions.results,\n  timer: state.questionsDataReducer.timerCount,\n  wrongAnswerClass: state.questionsDataReducer.wrongAnswerClass,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setNextQuestion: () => dispatch(newQuestionAction()),\n  timerCount: () => dispatch(timerCountAction()),\n  timeOut: () => dispatch(timeOutAction()),\n  checkAnswer: (points, assertions) => dispatch(checkAnswerAction(points, assertions)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionsInfos);\n\nQuestionsInfos.propTypes = {\n  questionIndex: PropTypes.number.isRequired,\n  questionsArr: PropTypes.arrayOf(PropTypes.object),\n  timer: PropTypes.number.isRequired,\n  timeOut: PropTypes.func.isRequired,\n  timerCount: PropTypes.func.isRequired,\n  checkAnswer: PropTypes.func.isRequired,\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  gravatarEmail: PropTypes.string,\n  picture: PropTypes.string,\n};\n\nQuestionsInfos.defaultProps = {\n  questionsArr: [],\n  picture: '',\n  gravatarEmail: '',\n};\n"]},"metadata":{},"sourceType":"module"}