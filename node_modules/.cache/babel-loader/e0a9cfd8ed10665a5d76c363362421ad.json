{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-project-trivia-react-redux-06/src/components/GameScreen/GameScreen.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport QuestionsInfos from './QuestionsInfos';\n\nclass GameScreen extends React.Component {\n  render() {\n    const questionsArr = this.props.questionsArr;\n    if (questionsArr.length === 0) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"Loading...\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }), React.createElement(QuestionsInfos, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  questionsArr: state.apiQuestionsReducer.questions.results\n});\n\nexport default connect(mapStateToProps)(GameScreen);\nGameScreen.propTypes = {\n  questionsArr: PropTypes.arrayOf(PropTypes.object)\n};\nGameScreen.defaultProps = {\n  questionsArr: []\n};","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-project-trivia-react-redux-06/src/components/GameScreen/GameScreen.js"],"names":["React","connect","PropTypes","Header","QuestionsInfos","GameScreen","Component","render","questionsArr","props","length","mapStateToProps","state","apiQuestionsReducer","questions","results","propTypes","arrayOf","object","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AACvCC,EAAAA,MAAM,GAAG;AAAA,UACCC,YADD,GACkB,KAAKC,KADvB,CACCD,YADD;AAEP,QAAIA,YAAY,CAACE,MAAb,KAAwB,CAA5B,EAA+B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAC/B,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAVsC;;AAazC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCJ,EAAAA,YAAY,EAAEI,KAAK,CAACC,mBAAN,CAA0BC,SAA1B,CAAoCC;AADhB,CAAZ,CAAxB;;AAIA,eAAed,OAAO,CAACU,eAAD,CAAP,CAAyBN,UAAzB,CAAf;AAGAA,UAAU,CAACW,SAAX,GAAuB;AACrBR,EAAAA,YAAY,EAAEN,SAAS,CAACe,OAAV,CAAkBf,SAAS,CAACgB,MAA5B;AADO,CAAvB;AAIAb,UAAU,CAACc,YAAX,GAA0B;AACxBX,EAAAA,YAAY,EAAE;AADU,CAA1B","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport QuestionsInfos from './QuestionsInfos';\n\nclass GameScreen extends React.Component {\n  render() {\n    const { questionsArr } = this.props;\n    if (questionsArr.length === 0) return <div>Loading...</div>;\n    return (\n      <div>\n        <Header />\n        <QuestionsInfos />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  questionsArr: state.apiQuestionsReducer.questions.results,\n});\n\nexport default connect(mapStateToProps)(GameScreen);\n\n\nGameScreen.propTypes = {\n  questionsArr: PropTypes.arrayOf(PropTypes.object),\n};\n\nGameScreen.defaultProps = {\n  questionsArr: [],\n};\n"]},"metadata":{},"sourceType":"module"}