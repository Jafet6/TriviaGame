{"ast":null,"code":"import _classCallCheck from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/jafet/GithubPages/triviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{connect}from'react-redux';import{withRouter}from'react-router-dom';import{newQuestionAction}from'../../actions/newQuestionAction';var NextButtonControl=/*#__PURE__*/function(_React$Component){_inherits(NextButtonControl,_React$Component);function NextButtonControl(props){var _this;_classCallCheck(this,NextButtonControl);_this=_possibleConstructorReturn(this,_getPrototypeOf(NextButtonControl).call(this,props));_this.nextPageControler=_this.nextPageControler.bind(_assertThisInitialized(_this));return _this;}_createClass(NextButtonControl,[{key:\"nextPageControler\",value:function nextPageControler(){var _this$props=this.props,setNextQuestion=_this$props.setNextQuestion,timerFunction=_this$props.timerFunction,questionIndex=_this$props.questionIndex,allAnswers=_this$props.allAnswers,history=_this$props.history;if(questionIndex+1===allAnswers.length)return history.push('/feedback');setNextQuestion();return timerFunction();}// nextButton Working\n},{key:\"render\",value:function render(){var _this$props2=this.props,wrongAnswerClass=_this$props2.wrongAnswerClass,timer=_this$props2.timer;if(wrongAnswerClass===''&&timer!==0)return null;return React.createElement(\"div\",null,React.createElement(\"button\",{className:\"play-button\",type:\"button\",\"data-testid\":\"btn-next\",onClick:this.nextPageControler},\"Pr\\xF3xima\"));}}]);return NextButtonControl;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{questionIndex:state.questionsDataReducer.index,wrongAnswerClass:state.questionsDataReducer.wrongAnswerClass,allAnswers:state.allAnswersReducer.allAnswers,timer:state.questionsDataReducer.timerCount};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{setNextQuestion:function setNextQuestion(){return dispatch(newQuestionAction());}};};export default withRouter(connect(mapStateToProps,mapDispatchToProps)(NextButtonControl));NextButtonControl.defaultProps={wrongAnswerClass:''};","map":{"version":3,"sources":["/home/jafet/GithubPages/triviaGame/src/components/GameScreen/NextButtonControl.js"],"names":["React","connect","withRouter","newQuestionAction","NextButtonControl","props","nextPageControler","bind","setNextQuestion","timerFunction","questionIndex","allAnswers","history","length","push","wrongAnswerClass","timer","Component","mapStateToProps","state","questionsDataReducer","index","allAnswersReducer","timerCount","mapDispatchToProps","dispatch","defaultProps"],"mappings":"o7BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,iBAAT,KAAkC,iCAAlC,C,GAEMC,CAAAA,iB,uFACJ,2BAAYC,KAAZ,CAAmB,mDACjB,mFAAMA,KAAN,GACA,MAAKC,iBAAL,CAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,+BAAzB,CAFiB,aAGlB,C,2FAEmB,iBAGd,KAAKF,KAHS,CAEhBG,eAFgB,aAEhBA,eAFgB,CAECC,aAFD,aAECA,aAFD,CAEgBC,aAFhB,aAEgBA,aAFhB,CAE+BC,UAF/B,aAE+BA,UAF/B,CAE2CC,OAF3C,aAE2CA,OAF3C,CAIlB,GAAKF,aAAa,CAAG,CAAjB,GAAwBC,UAAU,CAACE,MAAvC,CAA+C,MAAOD,CAAAA,OAAO,CAACE,IAAR,CAAa,WAAb,CAAP,CAC/CN,eAAe,GACf,MAAOC,CAAAA,aAAa,EAApB,CACD,CAED;uCAES,kBAC6B,KAAKJ,KADlC,CACCU,gBADD,cACCA,gBADD,CACmBC,KADnB,cACmBA,KADnB,CAEP,GAAID,gBAAgB,GAAK,EAArB,EAA2BC,KAAK,GAAK,CAAzC,CAA4C,MAAO,KAAP,CAC5C,MACE,gCACE,8BACE,SAAS,CAAC,aADZ,CAEE,IAAI,CAAC,QAFP,CAGE,cAAY,UAHd,CAIE,OAAO,CAAE,KAAKV,iBAJhB,eADF,CADF,CAYD,C,+BAhC6BN,KAAK,CAACiB,S,EAmCtC,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCT,aAAa,CAAES,KAAK,CAACC,oBAAN,CAA2BC,KADR,CAElCN,gBAAgB,CAAEI,KAAK,CAACC,oBAAN,CAA2BL,gBAFX,CAGlCJ,UAAU,CAAEQ,KAAK,CAACG,iBAAN,CAAwBX,UAHF,CAIlCK,KAAK,CAAEG,KAAK,CAACC,oBAAN,CAA2BG,UAJA,CAAZ,EAAxB,CAOA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxCjB,eAAe,CAAE,iCAAMiB,CAAAA,QAAQ,CAACtB,iBAAiB,EAAlB,CAAd,EADuB,CAAf,EAA3B,CAIA,cAAeD,CAAAA,UAAU,CAACD,OAAO,CAACiB,eAAD,CAAkBM,kBAAlB,CAAP,CAA6CpB,iBAA7C,CAAD,CAAzB,CAYAA,iBAAiB,CAACsB,YAAlB,CAAiC,CAC/BX,gBAAgB,CAAE,EADa,CAAjC","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { newQuestionAction } from '../../actions/newQuestionAction';\n\nclass NextButtonControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.nextPageControler = this.nextPageControler.bind(this);\n  }\n\n  nextPageControler() {\n    const {\n      setNextQuestion, timerFunction, questionIndex, allAnswers, history,\n    } = this.props;\n    if ((questionIndex + 1) === allAnswers.length) return history.push('/feedback');\n    setNextQuestion();\n    return timerFunction();\n  }\n\n  // nextButton Working\n\n  render() {\n    const { wrongAnswerClass, timer } = this.props;\n    if (wrongAnswerClass === '' && timer !== 0) return null;\n    return (\n      <div>\n        <button\n          className=\"play-button\"\n          type=\"button\"\n          data-testid=\"btn-next\"\n          onClick={this.nextPageControler}\n        >\n          Pr√≥xima\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  questionIndex: state.questionsDataReducer.index,\n  wrongAnswerClass: state.questionsDataReducer.wrongAnswerClass,\n  allAnswers: state.allAnswersReducer.allAnswers,\n  timer: state.questionsDataReducer.timerCount,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setNextQuestion: () => dispatch(newQuestionAction()),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NextButtonControl));\n\nNextButtonControl.propTypes = {\n  allAnswers: PropTypes.arrayOf(PropTypes.array).isRequired,\n  questionIndex: PropTypes.number.isRequired,\n  setNextQuestion: PropTypes.func.isRequired,\n  timerFunction: PropTypes.func.isRequired,\n  wrongAnswerClass: PropTypes.string,\n  timer: PropTypes.number.isRequired,\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nNextButtonControl.defaultProps = {\n  wrongAnswerClass: '',\n};\n"]},"metadata":{},"sourceType":"module"}