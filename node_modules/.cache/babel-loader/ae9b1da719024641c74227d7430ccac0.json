{"ast":null,"code":"import getApiGravatarRequest from '../service/apiGravatarRequest';\nexport const GET_GRAVATAR = 'GET_GRAVATAR';\nexport const GET_GRAVATAR_SUCCESS = 'GET_GRAVATAR_SUCCESS';\nexport const GET_GRAVATAR_FAILURE = 'GET_GRAVATAR_FAILURE';\n\nconst gravatarRequest = () => ({\n  type: GET_GRAVATAR\n});\n\nconst getGravatarSuccess = picture => ({\n  type: GET_GRAVATAR_SUCCESS,\n  picture\n});\n\nconst getGravatarFailure = error => ({\n  type: GET_GRAVATAR_FAILURE,\n  error\n});\n\nexport function getApiGravatar(hash) {\n  return dispatch => {\n    dispatch(gravatarRequest());\n    return getApiGravatarRequest(hash).then(picture => dispatch(getGravatarSuccess(picture)), error => dispatch(getGravatarFailure(error.message)));\n  };\n}","map":{"version":3,"sources":["/home/jafet/curso-Trybe/projetos/front-end/projeto-18-ReactJS-Redux-TriviaGame/src/actions/gravatarAction.js"],"names":["getApiGravatarRequest","GET_GRAVATAR","GET_GRAVATAR_SUCCESS","GET_GRAVATAR_FAILURE","gravatarRequest","type","getGravatarSuccess","picture","getGravatarFailure","error","getApiGravatar","hash","dispatch","then","message"],"mappings":"AAAA,OAAOA,qBAAP,MAAkC,+BAAlC;AAEA,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;;AAEP,MAAMC,eAAe,GAAG,OAAO;AAC7BC,EAAAA,IAAI,EAAEJ;AADuB,CAAP,CAAxB;;AAIA,MAAMK,kBAAkB,GAAIC,OAAD,KAAc;AACvCF,EAAAA,IAAI,EAAEH,oBADiC;AAEvCK,EAAAA;AAFuC,CAAd,CAA3B;;AAKA,MAAMC,kBAAkB,GAAIC,KAAD,KAAY;AACrCJ,EAAAA,IAAI,EAAEF,oBAD+B;AAErCM,EAAAA;AAFqC,CAAZ,CAA3B;;AAKA,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AACnC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACR,eAAe,EAAhB,CAAR;AAEA,WAAOJ,qBAAqB,CAACW,IAAD,CAArB,CACJE,IADI,CAEFN,OAAD,IAAaK,QAAQ,CAACN,kBAAkB,CAACC,OAAD,CAAnB,CAFlB,EAGFE,KAAD,IAAWG,QAAQ,CAACJ,kBAAkB,CAACC,KAAK,CAACK,OAAP,CAAnB,CAHhB,CAAP;AAKD,GARD;AASD","sourcesContent":["import getApiGravatarRequest from '../service/apiGravatarRequest';\n\nexport const GET_GRAVATAR = 'GET_GRAVATAR';\nexport const GET_GRAVATAR_SUCCESS = 'GET_GRAVATAR_SUCCESS';\nexport const GET_GRAVATAR_FAILURE = 'GET_GRAVATAR_FAILURE';\n\nconst gravatarRequest = () => ({\n  type: GET_GRAVATAR,\n});\n\nconst getGravatarSuccess = (picture) => ({\n  type: GET_GRAVATAR_SUCCESS,\n  picture,\n});\n\nconst getGravatarFailure = (error) => ({\n  type: GET_GRAVATAR_FAILURE,\n  error,\n});\n\nexport function getApiGravatar(hash) {\n  return (dispatch) => {\n    dispatch(gravatarRequest());\n\n    return getApiGravatarRequest(hash)\n      .then(\n        (picture) => dispatch(getGravatarSuccess(picture)),\n        (error) => dispatch(getGravatarFailure(error.message)),\n      );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}