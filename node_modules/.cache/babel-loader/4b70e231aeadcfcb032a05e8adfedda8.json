{"ast":null,"code":"import _objectSpread from \"/home/jafet/curso-Trybe/projetos/front-end/projeto-18-ReactJS-Redux-TriviaGame/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/jafet/curso-Trybe/projetos/front-end/projeto-18-ReactJS-Redux-TriviaGame/src/components/SettingsPage/Settings.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, Link } from 'react-router-dom';\nimport { filtersAction } from '../../actions/filtersAction';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: {\n        category: '',\n        difficulty: '',\n        type: ''\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const filter = this.state.filter;\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      filter: _objectSpread({}, filter, {\n        [name]: value\n      })\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          categories = _this$props.categories,\n          filterDispatch = _this$props.filterDispatch;\n    const _this$state = this.state,\n          category = _this$state.category,\n          type = _this$state.type,\n          difficulty = _this$state.difficulty,\n          filter = _this$state.filter;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      \"data-testid\": \"settings-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Configura\\xE7\\xF5es\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Catergory\", React.createElement(\"select\", {\n      className: \"settings-config\",\n      name: \"category\",\n      value: category,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Any Category\"), categories.map(({\n      id,\n      name\n    }) => React.createElement(\"option\", {\n      value: id,\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, name)))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Type\", React.createElement(\"select\", {\n      name: \"type\",\n      value: type,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Any Type\"), React.createElement(\"option\", {\n      value: \"multiple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Multiple Choice\"), React.createElement(\"option\", {\n      value: \"boolean\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"True / False\"))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Difficulty\", React.createElement(\"select\", {\n      name: \"difficulty\",\n      value: difficulty,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Any Difficulty\"), React.createElement(\"option\", {\n      value: \"easy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Easy\"), React.createElement(\"option\", {\n      value: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Medium\"), React.createElement(\"option\", {\n      value: \"hard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Hard\")))), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"settings-choosed\",\n      type: \"button\",\n      onClick: () => filterDispatch(filter),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Aplicar Filtro\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  categories: state.apiCategoriesReducer.categories\n});\n\nconst mapDispatchToProps = dispatch => ({\n  filterDispatch: filterObj => dispatch(filtersAction(filterObj))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Settings));","map":{"version":3,"sources":["/home/jafet/curso-Trybe/projetos/front-end/projeto-18-ReactJS-Redux-TriviaGame/src/components/SettingsPage/Settings.js"],"names":["React","connect","withRouter","Link","filtersAction","Settings","Component","constructor","props","state","filter","category","difficulty","type","handleChange","bind","event","target","name","value","setState","render","categories","filterDispatch","map","id","mapStateToProps","apiCategoriesReducer","mapDispatchToProps","dispatch","filterObj"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, Link } from 'react-router-dom';\nimport { filtersAction } from '../../actions/filtersAction';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: {\n        category: '',\n        difficulty: '',\n        type: '',\n      },\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const { filter } = this.state;\n    const { name, value } = event.target;\n    this.setState({\n      filter: {\n        ...filter,\n        [name]: value,\n      },\n    });\n  }\n\n  render() {\n    const { categories, filterDispatch } = this.props;\n    const {\n      category, type, difficulty, filter,\n    } = this.state;\n    return (\n      <div>\n        <h1 data-testid=\"settings-title\">Configurações</h1>\n        <form>\n          <label>\n            Catergory\n            <select className=\"settings-config\" name=\"category\" value={category} onChange={this.handleChange}>\n              <option value=\"\">Any Category</option>\n              {categories.map(({ id, name }) => (<option value={id} key={id}>{name}</option>))}\n            </select>\n          </label>\n          <label>\n            Type\n            <select name=\"type\" value={type} onChange={this.handleChange}>\n              <option value=\"\">Any Type</option>\n              <option value=\"multiple\">Multiple Choice</option>\n              <option value=\"boolean\">True / False</option>\n            </select>\n          </label>\n          <label>\n            Difficulty\n            <select name=\"difficulty\" value={difficulty} onChange={this.handleChange}>\n              <option value=\"\">Any Difficulty</option>\n              <option value=\"easy\">Easy</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"hard\">Hard</option>\n            </select>\n          </label>\n        </form>\n        <Link to=\"/\">\n          <button className=\"settings-choosed\" type=\"button\" onClick={() => filterDispatch(filter)}>\n            Aplicar Filtro\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  categories: state.apiCategoriesReducer.categories,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  filterDispatch: (filterObj) => dispatch(filtersAction(filterObj)),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Settings));\n"]},"metadata":{},"sourceType":"module"}