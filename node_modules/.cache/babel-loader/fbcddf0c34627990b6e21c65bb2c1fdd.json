{"ast":null,"code":"import apiQuestionsRequest from '../service/apiQuestionsRequest';\nexport const API_REQUEST = 'API_REQUEST';\nexport const API_RECEIVE_SUCCESS = 'API_RECEIVE_SUCCESS';\nexport const API_RECEIVE_FAILURE = 'API_RECEIVE_FAILURE';\n\nconst apiRequestControl = () => ({\n  type: API_REQUEST\n});\n\nconst receiveApiDataSuccess = questions => ({\n  type: API_RECEIVE_SUCCESS,\n  questions\n});\n\nconst receiveApiDataFailure = error => ({\n  type: API_RECEIVE_SUCCESS,\n  errorMessage: error\n});\n\nexport function getApiQuestions() {\n  return dispatch => {\n    dispatch(apiRequestControl());\n    return apiQuestionsRequest().then(questions => dispatch(receiveApiDataSuccess(questions)), error => dispatch(receiveApiDataFailure(error.message)));\n  };\n}","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-project-trivia-react-redux-06/src/actions/apiQuestionsAction.js"],"names":["apiQuestionsRequest","API_REQUEST","API_RECEIVE_SUCCESS","API_RECEIVE_FAILURE","apiRequestControl","type","receiveApiDataSuccess","questions","receiveApiDataFailure","error","errorMessage","getApiQuestions","dispatch","then","message"],"mappings":"AAAA,OAAOA,mBAAP,MAAgC,gCAAhC;AAEA,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;;AAEP,MAAMC,iBAAiB,GAAG,OAAO;AAC/BC,EAAAA,IAAI,EAAEJ;AADyB,CAAP,CAA1B;;AAIA,MAAMK,qBAAqB,GAAIC,SAAD,KAAgB;AAC5CF,EAAAA,IAAI,EAAEH,mBADsC;AAE5CK,EAAAA;AAF4C,CAAhB,CAA9B;;AAKA,MAAMC,qBAAqB,GAAIC,KAAD,KAAY;AACxCJ,EAAAA,IAAI,EAAEH,mBADkC;AAExCQ,EAAAA,YAAY,EAAED;AAF0B,CAAZ,CAA9B;;AAKA,OAAO,SAASE,eAAT,GAA2B;AAChC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACR,iBAAiB,EAAlB,CAAR;AAEA,WAAOJ,mBAAmB,GACvBa,IADI,CAEFN,SAAD,IAAeK,QAAQ,CAACN,qBAAqB,CAACC,SAAD,CAAtB,CAFpB,EAGFE,KAAD,IAAWG,QAAQ,CAACJ,qBAAqB,CAACC,KAAK,CAACK,OAAP,CAAtB,CAHhB,CAAP;AAKD,GARD;AASD","sourcesContent":["import apiQuestionsRequest from '../service/apiQuestionsRequest';\n\nexport const API_REQUEST = 'API_REQUEST';\nexport const API_RECEIVE_SUCCESS = 'API_RECEIVE_SUCCESS';\nexport const API_RECEIVE_FAILURE = 'API_RECEIVE_FAILURE';\n\nconst apiRequestControl = () => ({\n  type: API_REQUEST,\n});\n\nconst receiveApiDataSuccess = (questions) => ({\n  type: API_RECEIVE_SUCCESS,\n  questions,\n});\n\nconst receiveApiDataFailure = (error) => ({\n  type: API_RECEIVE_SUCCESS,\n  errorMessage: error,\n});\n\nexport function getApiQuestions() {\n  return (dispatch) => {\n    dispatch(apiRequestControl());\n\n    return apiQuestionsRequest()\n      .then(\n        (questions) => dispatch(receiveApiDataSuccess(questions)),\n        (error) => dispatch(receiveApiDataFailure(error.message)),\n      );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}