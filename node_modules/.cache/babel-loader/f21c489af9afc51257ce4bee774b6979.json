{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-project-trivia-react-redux-06/src/components/GameScreen/NextButtonControl.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { newQuestionAction } from '../../actions/newQuestionAction';\n\nclass NextButtonControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.nextPageControler = this.nextPageControler.bind(this);\n  }\n\n  nextPageControler() {\n    const _this$props = this.props,\n          setNextQuestion = _this$props.setNextQuestion,\n          timerFunction = _this$props.timerFunction,\n          questionIndex = _this$props.questionIndex,\n          allAnswers = _this$props.allAnswers;\n    console.log(questionIndex);\n    if (questionIndex + 1 === allAnswers.length) return React.createElement(Redirect, {\n      to: \"/feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n    setNextQuestion();\n    return timerFunction();\n  }\n\n  render() {\n    const wrongAnswerClass = this.props.wrongAnswerClass;\n    if (wrongAnswerClass === '') return null;\n    return React.createElement(\"div\", {\n      \"data-testid\": \"btn-next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\" // onClick={() => {\n      //   setNextQuestion();\n      //   timerFunction();\n      // }}\n      ,\n      onClick: this.nextPageControler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Pr\\xF3xima\"));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => ({\n  questionIndex: state.questionsDataReducer.index,\n  wrongAnswerClass: state.questionsDataReducer.wrongAnswerClass,\n  allAnswers: state.allAnswersReducer.allAnswers\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setNextQuestion: () => dispatch(newQuestionAction())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NextButtonControl);\nNextButtonControl.propTypes = {\n  allAnswers: PropTypes.arrayOf(PropTypes.array).isRequired,\n  questionIndex: PropTypes.number.isRequired,\n  setNextQuestion: PropTypes.func.isRequired,\n  timerFunction: PropTypes.func.isRequired,\n  wrongAnswerClass: PropTypes.string\n};\nNextButtonControl.defaultProps = {\n  wrongAnswerClass: ''\n};","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-project-trivia-react-redux-06/src/components/GameScreen/NextButtonControl.js"],"names":["React","PropTypes","connect","Redirect","newQuestionAction","NextButtonControl","Component","constructor","props","nextPageControler","bind","setNextQuestion","timerFunction","questionIndex","allAnswers","console","log","length","render","wrongAnswerClass","mapStateToProps","state","questionsDataReducer","index","allAnswersReducer","mapDispatchToProps","dispatch","propTypes","arrayOf","array","isRequired","number","func","string","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,iBAAT,QAAkC,iCAAlC;;AAEA,MAAMC,iBAAN,SAAgCL,KAAK,CAACM,SAAtC,CAAgD;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;AAEDD,EAAAA,iBAAiB,GAAG;AAAA,wBAGd,KAAKD,KAHS;AAAA,UAEhBG,eAFgB,eAEhBA,eAFgB;AAAA,UAECC,aAFD,eAECA,aAFD;AAAA,UAEgBC,aAFhB,eAEgBA,aAFhB;AAAA,UAE+BC,UAF/B,eAE+BA,UAF/B;AAIlBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AACA,QAAKA,aAAa,GAAG,CAAjB,KAAwBC,UAAU,CAACG,MAAvC,EAA+C,OAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAC/CN,IAAAA,eAAe;AACf,WAAOC,aAAa,EAApB;AACD;;AAEDM,EAAAA,MAAM,GAAG;AAAA,UACCC,gBADD,GACsB,KAAKX,KAD3B,CACCW,gBADD;AAEP,QAAIA,gBAAgB,KAAK,EAAzB,EAA6B,OAAO,IAAP;AAC7B,WACE;AAAK,qBAAY,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,QADP,CAEE;AACA;AACA;AACA;AALF;AAME,MAAA,OAAO,EAAE,KAAKV,iBANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAcD;;AAjC6C;;AAkC/C;;AAED,MAAMW,eAAe,GAAIC,KAAD,KAAY;AAClCR,EAAAA,aAAa,EAAEQ,KAAK,CAACC,oBAAN,CAA2BC,KADR;AAElCJ,EAAAA,gBAAgB,EAAEE,KAAK,CAACC,oBAAN,CAA2BH,gBAFX;AAGlCL,EAAAA,UAAU,EAAEO,KAAK,CAACG,iBAAN,CAAwBV;AAHF,CAAZ,CAAxB;;AAMA,MAAMW,kBAAkB,GAAIC,QAAD,KAAe;AACxCf,EAAAA,eAAe,EAAE,MAAMe,QAAQ,CAACtB,iBAAiB,EAAlB;AADS,CAAf,CAA3B;;AAIA,eAAeF,OAAO,CAACkB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CpB,iBAA7C,CAAf;AAEAA,iBAAiB,CAACsB,SAAlB,GAA8B;AAC5Bb,EAAAA,UAAU,EAAEb,SAAS,CAAC2B,OAAV,CAAkB3B,SAAS,CAAC4B,KAA5B,EAAmCC,UADnB;AAE5BjB,EAAAA,aAAa,EAAEZ,SAAS,CAAC8B,MAAV,CAAiBD,UAFJ;AAG5BnB,EAAAA,eAAe,EAAEV,SAAS,CAAC+B,IAAV,CAAeF,UAHJ;AAI5BlB,EAAAA,aAAa,EAAEX,SAAS,CAAC+B,IAAV,CAAeF,UAJF;AAK5BX,EAAAA,gBAAgB,EAAElB,SAAS,CAACgC;AALA,CAA9B;AAQA5B,iBAAiB,CAAC6B,YAAlB,GAAiC;AAC/Bf,EAAAA,gBAAgB,EAAE;AADa,CAAjC","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { newQuestionAction } from '../../actions/newQuestionAction';\n\nclass NextButtonControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.nextPageControler = this.nextPageControler.bind(this);\n  }\n\n  nextPageControler() {\n    const {\n      setNextQuestion, timerFunction, questionIndex, allAnswers,\n    } = this.props;\n    console.log(questionIndex);\n    if ((questionIndex + 1) === allAnswers.length) return <Redirect to=\"/feedback\" />;\n    setNextQuestion();\n    return timerFunction();\n  }\n\n  render() {\n    const { wrongAnswerClass } = this.props;\n    if (wrongAnswerClass === '') return null;\n    return (\n      <div data-testid=\"btn-next\">\n        <button\n          type=\"button\"\n          // onClick={() => {\n          //   setNextQuestion();\n          //   timerFunction();\n          // }}\n          onClick={this.nextPageControler}\n        >\n          Pr√≥xima\n        </button>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  questionIndex: state.questionsDataReducer.index,\n  wrongAnswerClass: state.questionsDataReducer.wrongAnswerClass,\n  allAnswers: state.allAnswersReducer.allAnswers,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setNextQuestion: () => dispatch(newQuestionAction()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NextButtonControl);\n\nNextButtonControl.propTypes = {\n  allAnswers: PropTypes.arrayOf(PropTypes.array).isRequired,\n  questionIndex: PropTypes.number.isRequired,\n  setNextQuestion: PropTypes.func.isRequired,\n  timerFunction: PropTypes.func.isRequired,\n  wrongAnswerClass: PropTypes.string,\n};\n\nNextButtonControl.defaultProps = {\n  wrongAnswerClass: '',\n};\n"]},"metadata":{},"sourceType":"module"}