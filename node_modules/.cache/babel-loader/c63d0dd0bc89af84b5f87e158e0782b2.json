{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-project-trivia-react-redux-06/src/components/FeedbackPage/feedback.jsx\";\nimport React, { Component } from 'react';\nimport './feedback.style.css'; // import { Link } from 'react-router-dom';\n// import { connect } from 'react-redux';\n\nexport class Feedback extends Component {\n  static feedbackPos() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      \"data-testid\": \"feedback-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"Mandou bem!\"));\n  }\n\n  static feedbackNeg() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      \"data-testid\": \"feedback-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Podia ser melhor...\"));\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerScore: 50,\n      playerImage: 'https://www.gravatar.com/avatar/2d3bf5b67282f5f466e503d7022abcf3',\n      playerName: 'Eduardo',\n      correctAnswers: 2\n    };\n  }\n\n  renderScore() {\n    const _this$state = this.state,\n          correctAnswers = _this$state.correctAnswers,\n          playerScore = _this$state.playerScore;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, `Você acertou ${correctAnswers} questões!`), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, `Um total de ${playerScore} pontos!`));\n  }\n\n  renderFeedbackScreen() {\n    const correctAnswers = this.state.correctAnswers;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, correctAnswers <= 3 ? Feedback.feedbackNeg() : Feedback.feedbackPos(), this.renderScore());\n  }\n\n  renderButtons() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"feedback-button-ranking\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"VER RANKING\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"feedback-button-playagain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"JOGAR NOVAMENTE\")));\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          playerImage = _this$state2.playerImage,\n          playerName = _this$state2.playerName,\n          playerScore = _this$state2.playerScore;\n    return React.createElement(\"div\", {\n      className: \"header-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"feedback-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"player-profile-img-header\",\n      alt: \"player-profile\",\n      src: playerImage,\n      \"data-testeid\": \"header-profile-picture\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      \"data-testid\": \"header-player-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Jogador:\", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, playerName))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      \"data-testid\": \"header-score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Pontos:\", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, playerScore)))), React.createElement(\"div\", {\n      className: \"score-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.renderFeedbackScreen(), this.renderButtons()));\n  }\n\n} // const mapStateToProps = (state) => ({});\n// const mapDispatchToProps = {};\n\nexport default Feedback; // export default connect(mapStateToProps, mapDispatchToProps)(Feedback);","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-project-trivia-react-redux-06/src/components/FeedbackPage/feedback.jsx"],"names":["React","Component","Feedback","feedbackPos","feedbackNeg","constructor","props","state","playerScore","playerImage","playerName","correctAnswers","renderScore","renderFeedbackScreen","renderButtons","render","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './feedback.style.css';\n// import { Link } from 'react-router-dom';\n// import { connect } from 'react-redux';\n\nexport class Feedback extends Component {\n  static feedbackPos() {\n    return (\n      <div>\n        <h1 data-testid=\"feedback-text\">Mandou bem!</h1>\n      </div>\n    );\n  }\n\n  static feedbackNeg() {\n    return (\n      <div>\n        <h1 data-testid=\"feedback-text\">Podia ser melhor...</h1>\n      </div>\n    );\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playerScore: 50,\n      playerImage:\n        'https://www.gravatar.com/avatar/2d3bf5b67282f5f466e503d7022abcf3',\n      playerName: 'Eduardo',\n      correctAnswers: 2,\n    };\n  }\n\n  renderScore() {\n    const { correctAnswers, playerScore } = this.state;\n    return (\n      <div>\n        <h2>{`Você acertou ${correctAnswers} questões!`}</h2>\n        <h2>{`Um total de ${playerScore} pontos!`}</h2>\n      </div>\n    );\n  }\n\n  renderFeedbackScreen() {\n    const { correctAnswers } = this.state;\n    return (\n      <div>\n        {correctAnswers <= 3 ? Feedback.feedbackNeg() : Feedback.feedbackPos()}\n        {this.renderScore()}\n      </div>\n    );\n  }\n\n  renderButtons() {\n    return (\n      <div>\n        <div>\n          {/* <Link to='/ranking'> */}\n            <button className='feedback-button-ranking'>VER RANKING</button>\n          {/* </Link> */}\n        </div>\n        <div>\n          {/* <Link to='/'> */}\n            <button className='feedback-button-playagain'>\n              JOGAR NOVAMENTE\n            </button>\n          {/* </Link> */}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { playerImage, playerName, playerScore } = this.state;\n    return (\n      <div className=\"header-container\">\n        <header className=\"feedback-header\">\n          <div style={{ display: 'flex' }}>\n            <img\n              className=\"player-profile-img-header\"\n              alt=\"player-profile\"\n              src={playerImage}\n              data-testeid=\"header-profile-picture\"\n            />\n            <p data-testid=\"header-player-name\">\n              Jogador:\n              <strong>{playerName}</strong>\n            </p>\n          </div>\n          <div>\n            <p data-testid=\"header-score\">\n              Pontos:\n              <strong>{playerScore}</strong>\n            </p>\n          </div>\n        </header>\n        <div className=\"score-container\">\n          {this.renderFeedbackScreen()}\n          {this.renderButtons()}\n        </div>\n      </div>\n    );\n  }\n}\n\n// const mapStateToProps = (state) => ({});\n\n// const mapDispatchToProps = {};\n\nexport default Feedback;\n// export default connect(mapStateToProps, mapDispatchToProps)(Feedback);\n"]},"metadata":{},"sourceType":"module"}