{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-project-trivia-react-redux-06/src/components/GameScreen/NextButtonControl.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { newQuestionAction } from '../../actions/newQuestionAction';\n\nclass NextButtonControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.nextPageControler = this.nextPageControler.bind(this);\n  }\n\n  nextPageControler() {\n    const _this$props = this.props,\n          setNextQuestion = _this$props.setNextQuestion,\n          timerFunction = _this$props.timerFunction,\n          questionIndex = _this$props.questionIndex;\n    if (questionIndex === 4) return this.props.history.push('/feedback');\n    setNextQuestion();\n    return timerFunction();\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          setNextQuestion = _this$props2.setNextQuestion,\n          wrongAnswerClass = _this$props2.wrongAnswerClass,\n          timerFunction = _this$props2.timerFunction,\n          questionIndex = _this$props2.questionIndex;\n    if (wrongAnswerClass === '') return null;\n    return React.createElement(\"div\", {\n      \"data-testid\": \"btn-next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\" // onClick={() => {\n      //   setNextQuestion();\n      //   timerFunction();\n      // }}\n      ,\n      onClick: this.nextPageControler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Pr\\xF3xima\"));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => ({\n  questionIndex: state.questionsDataReducer.index,\n  wrongAnswerClass: state.questionsDataReducer.wrongAnswerClass\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setNextQuestion: () => dispatch(newQuestionAction())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NextButtonControl);\nNextButtonControl.propTypes = {\n  questionIndex: PropTypes.number.isRequired,\n  setNextQuestion: PropTypes.func.isRequired,\n  timerFunction: PropTypes.func.isRequired,\n  wrongAnswerClass: PropTypes.string\n};\nNextButtonControl.defaultProps = {\n  wrongAnswerClass: ''\n};","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-project-trivia-react-redux-06/src/components/GameScreen/NextButtonControl.js"],"names":["React","PropTypes","connect","newQuestionAction","NextButtonControl","Component","constructor","props","nextPageControler","bind","setNextQuestion","timerFunction","questionIndex","history","push","render","wrongAnswerClass","mapStateToProps","state","questionsDataReducer","index","mapDispatchToProps","dispatch","propTypes","number","isRequired","func","string","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,iCAAlC;;AAEA,MAAMC,iBAAN,SAAgCJ,KAAK,CAACK,SAAtC,CAAgD;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;AAEDD,EAAAA,iBAAiB,GAAG;AAAA,wBACwC,KAAKD,KAD7C;AAAA,UACVG,eADU,eACVA,eADU;AAAA,UACOC,aADP,eACOA,aADP;AAAA,UACsBC,aADtB,eACsBA,aADtB;AAElB,QAAIA,aAAa,KAAK,CAAtB,EAAyB,OAAO,KAAKL,KAAL,CAAWM,OAAX,CAAmBC,IAAnB,CAAwB,WAAxB,CAAP;AACzBJ,IAAAA,eAAe;AACf,WAAOC,aAAa,EAApB;AACD;;AAEDI,EAAAA,MAAM,GAAG;AAAA,yBACqE,KAAKR,KAD1E;AAAA,UACCG,eADD,gBACCA,eADD;AAAA,UACkBM,gBADlB,gBACkBA,gBADlB;AAAA,UACoCL,aADpC,gBACoCA,aADpC;AAAA,UACmDC,aADnD,gBACmDA,aADnD;AAEP,QAAII,gBAAgB,KAAK,EAAzB,EAA6B,OAAO,IAAP;AAC7B,WACE;AAAK,qBAAY,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,QADP,CAEE;AACA;AACA;AACA;AALF;AAME,MAAA,OAAO,EAAE,KAAKR,iBANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAcD;;AA9B6C;;AA+B/C;;AAED,MAAMS,eAAe,GAAIC,KAAD,KAAY;AAClCN,EAAAA,aAAa,EAAEM,KAAK,CAACC,oBAAN,CAA2BC,KADR;AAElCJ,EAAAA,gBAAgB,EAAEE,KAAK,CAACC,oBAAN,CAA2BH;AAFX,CAAZ,CAAxB;;AAKA,MAAMK,kBAAkB,GAAIC,QAAD,KAAe;AACxCZ,EAAAA,eAAe,EAAE,MAAMY,QAAQ,CAACnB,iBAAiB,EAAlB;AADS,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAACe,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CjB,iBAA7C,CAAf;AAEAA,iBAAiB,CAACmB,SAAlB,GAA8B;AAC5BX,EAAAA,aAAa,EAAEX,SAAS,CAACuB,MAAV,CAAiBC,UADJ;AAE5Bf,EAAAA,eAAe,EAAET,SAAS,CAACyB,IAAV,CAAeD,UAFJ;AAG5Bd,EAAAA,aAAa,EAAEV,SAAS,CAACyB,IAAV,CAAeD,UAHF;AAI5BT,EAAAA,gBAAgB,EAAEf,SAAS,CAAC0B;AAJA,CAA9B;AAOAvB,iBAAiB,CAACwB,YAAlB,GAAiC;AAC/BZ,EAAAA,gBAAgB,EAAE;AADa,CAAjC","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { newQuestionAction } from '../../actions/newQuestionAction';\n\nclass NextButtonControl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.nextPageControler = this.nextPageControler.bind(this);\n  }\n\n  nextPageControler() {\n    const { setNextQuestion, timerFunction, questionIndex } = this.props;\n    if (questionIndex === 4) return this.props.history.push('/feedback');\n    setNextQuestion();\n    return timerFunction();\n  }\n\n  render() {\n    const { setNextQuestion, wrongAnswerClass, timerFunction, questionIndex } = this.props;\n    if (wrongAnswerClass === '') return null;\n    return (\n      <div data-testid=\"btn-next\">\n        <button\n          type=\"button\"\n          // onClick={() => {\n          //   setNextQuestion();\n          //   timerFunction();\n          // }}\n          onClick={this.nextPageControler}\n        >\n          Pr√≥xima\n        </button>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  questionIndex: state.questionsDataReducer.index,\n  wrongAnswerClass: state.questionsDataReducer.wrongAnswerClass,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setNextQuestion: () => dispatch(newQuestionAction()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NextButtonControl);\n\nNextButtonControl.propTypes = {\n  questionIndex: PropTypes.number.isRequired,\n  setNextQuestion: PropTypes.func.isRequired,\n  timerFunction: PropTypes.func.isRequired,\n  wrongAnswerClass: PropTypes.string,\n};\n\nNextButtonControl.defaultProps = {\n  wrongAnswerClass: '',\n};\n"]},"metadata":{},"sourceType":"module"}