{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-project-trivia-react-redux-06/src/components/SettingsPage/Settings.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      category: '',\n      difficulty: '',\n      type: ''\n    };\n  }\n\n  handleChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    const categories = this.props.categories;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      \"data-testid\": \"settings-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Configura\\xE7\\xF5es\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Catergory\", React.createElement(\"select\", {\n      name: \"category\",\n      value: \"category\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Any Category\"), categories.map(({\n      id,\n      name\n    }) => React.createElement(\"option\", {\n      value: name,\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, name)))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Type\", React.createElement(\"select\", {\n      name: \"type\",\n      value: \"type\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Any Type\"), React.createElement(\"option\", {\n      value: \"multiple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Multiple Choice\"), React.createElement(\"option\", {\n      value: \"boolean\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"True / False\"))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Difficulty\", React.createElement(\"select\", {\n      name: \"difficulty\",\n      value: \"difficulty\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Any Difficulty\"), React.createElement(\"option\", {\n      value: \"easy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Easy\"), React.createElement(\"option\", {\n      value: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Medium\"), React.createElement(\"option\", {\n      value: \"hard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Hard\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  categories: state.apiCategoriesReducer.categories\n});\n\nexport default connect(mapStateToProps)(Settings);","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-project-trivia-react-redux-06/src/components/SettingsPage/Settings.js"],"names":["React","connect","Settings","Component","constructor","props","state","category","difficulty","type","handleChange","event","target","name","value","setState","render","categories","map","id","mapStateToProps","apiCategoriesReducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,UAAU,EAAE,EAFD;AAGXC,MAAAA,IAAI,EAAE;AAHK,KAAb;AAKD;;AAEDC,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAAA,0BACMA,KAAK,CAACC,MADZ;AAAA,UACVC,IADU,iBACVA,IADU;AAAA,UACJC,KADI,iBACJA,KADI;AAElB,SAAKC,QAAL,CAAc;AAAE,OAACF,IAAD,GAAQC;AAAV,KAAd;AACD;;AAEDE,EAAAA,MAAM,GAAG;AAAA,UACCC,UADD,GACgB,KAAKZ,KADrB,CACCY,UADD;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,qBAAY,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAQ,MAAA,IAAI,EAAC,UAAb;AAAwB,MAAA,KAAK,EAAC,UAA9B;AAAyC,MAAA,QAAQ,EAAE,KAAKP,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGO,UAAU,CAACC,GAAX,CAAe,CAAC;AAAEC,MAAAA,EAAF;AAAMN,MAAAA;AAAN,KAAD,KAAmB;AAAQ,MAAA,KAAK,EAAEA,IAAf;AAAqB,MAAA,GAAG,EAAEM,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BN,IAA/B,CAAlC,CAFH,CAFF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEE;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,KAAK,EAAC,MAA1B;AAAiC,MAAA,QAAQ,EAAE,KAAKH,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,EAGE;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,CAFF,CARF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEE;AAAQ,MAAA,IAAI,EAAC,YAAb;AAA0B,MAAA,KAAK,EAAC,YAAhC;AAA6C,MAAA,QAAQ,EAAE,KAAKA,YAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIE;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CAFF,CAhBF,CAFF,CADF;AA+BD;;AAhDoC;;AAmDvC,MAAMU,eAAe,GAAId,KAAD,KAAY;AAClCW,EAAAA,UAAU,EAAEX,KAAK,CAACe,oBAAN,CAA2BJ;AADL,CAAZ,CAAxB;;AAIA,eAAehB,OAAO,CAACmB,eAAD,CAAP,CAAyBlB,QAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      category: '',\n      difficulty: '',\n      type: '',\n    }\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  } \n\n  render() {\n    const { categories } = this.props;\n    return (\n      <div>\n        <h1 data-testid=\"settings-title\">Configurações</h1>\n        <form>\n          <label>\n            Catergory\n            <select name=\"category\" value=\"category\" onChange={this.handleChange}>\n              <option value=\"\">Any Category</option>\n              {categories.map(({ id, name }) => (<option value={name} key={id}>{name}</option>))}\n            </select>\n          </label>\n          <label>\n            Type\n            <select name=\"type\" value=\"type\" onChange={this.handleChange}>\n              <option value=\"\">Any Type</option>\n              <option value=\"multiple\">Multiple Choice</option>\n              <option value=\"boolean\">True / False</option>\n            </select>\n          </label>\n          <label>\n            Difficulty\n            <select name=\"difficulty\" value=\"difficulty\" onChange={this.handleChange}>\n              <option value=\"\">Any Difficulty</option>\n              <option value=\"easy\">Easy</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"hard\">Hard</option>\n            </select>\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  categories: state.apiCategoriesReducer.categories,\n});\n\nexport default connect(mapStateToProps)(Settings);\n"]},"metadata":{},"sourceType":"module"}