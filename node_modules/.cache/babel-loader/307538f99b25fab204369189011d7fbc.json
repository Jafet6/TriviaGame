{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-project-trivia-react-redux-06/src/components/GameScreen/ShuffledButtons.js\";\nimport React from 'react';\n\nclass ShuffledButtons extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkAnswer = stringToTest => {\n      const question = this.props.question;\n      if (stringToTest === question.correct_answer) return console.log(stringToTest);\n      return console.log('wrooong');\n    };\n\n    this.arrWithAllButtons = objQuestion => {\n      const incorrect_answers = objQuestion.incorrect_answers;\n      const disabledBtn = this.state.disabledBtn;\n      const incorrectAnswersArr = incorrect_answers.map((e, index) => React.createElement(\"button\", {\n        disabled: disabledBtn,\n        onClick: () => this.checkAnswer(e),\n        \"data-testid\": `wrong-answer-${index}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, e));\n      const allAnswers = [React.createElement(\"button\", {\n        disabled: disabledBtn,\n        onClick: () => this.checkAnswer(objQuestion.correct_answer),\n        \"data-testid\": \"correct-answer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, objQuestion.correct_answer), ...incorrectAnswersArr];\n      return allAnswers;\n    };\n\n    this.shuffleAnswers = array => {\n      let currentIndex = array.length;\n      let temporaryValue = [];\n      let randomIndex;\n\n      while (currentIndex !== 0) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      return array;\n    };\n\n    this.state = {\n      disabledBtn: false\n    };\n  }\n\n  render() {\n    const question = this.props.question;\n    console.log(question);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.shuffleAnswers(this.arrWithAllButtons(question)).map(e => React.createElement(\"div\", {\n      key: e.props.children,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, e)));\n  }\n\n}\n\nexport default ShuffledButtons;","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-project-trivia-react-redux-06/src/components/GameScreen/ShuffledButtons.js"],"names":["React","ShuffledButtons","Component","constructor","props","checkAnswer","stringToTest","question","correct_answer","console","log","arrWithAllButtons","objQuestion","incorrect_answers","disabledBtn","state","incorrectAnswersArr","map","e","index","allAnswers","shuffleAnswers","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","render","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAN,SAA8BD,KAAK,CAACE,SAApC,CAA8C;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,WAPmB,GAOJC,YAAD,IAAkB;AAAA,YACtBC,QADsB,GACT,KAAKH,KADI,CACtBG,QADsB;AAE9B,UAAID,YAAY,KAAKC,QAAQ,CAACC,cAA9B,EAA8C,OAAOC,OAAO,CAACC,GAAR,CAAYJ,YAAZ,CAAP;AAC9C,aAAOG,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAP;AACD,KAXkB;;AAAA,SAanBC,iBAbmB,GAaEC,WAAD,IAAiB;AAAA,YAC3BC,iBAD2B,GACLD,WADK,CAC3BC,iBAD2B;AAAA,YAE3BC,WAF2B,GAEX,KAAKC,KAFM,CAE3BD,WAF2B;AAInC,YAAME,mBAAmB,GAAGH,iBAAiB,CAACI,GAAlB,CAAsB,CAACC,CAAD,EAAIC,KAAJ,KAC/C;AAAQ,QAAA,QAAQ,EAAEL,WAAlB;AAA+B,QAAA,OAAO,EAAE,MAAM,KAAKT,WAAL,CAAiBa,CAAjB,CAA9C;AAAmE,uBAAc,gBAAeC,KAAM,EAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0GD,CAA1G,CADyB,CAA5B;AAGA,YAAME,UAAU,GAAG,CACnB;AACE,QAAA,QAAQ,EAAEN,WADZ;AAEE,QAAA,OAAO,EAAE,MAAM,KAAKT,WAAL,CAAiBO,WAAW,CAACJ,cAA7B,CAFjB;AAGE,uBAAY,gBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIKI,WAAW,CAACJ,cAJjB,CADmB,EAOnB,GAAGQ,mBAPgB,CAAnB;AASA,aAAOI,UAAP;AACD,KA9BkB;;AAAA,SAgCnBC,cAhCmB,GAgCDC,KAAD,IAAW;AAC1B,UAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;AACA,UAAIC,cAAc,GAAG,EAArB;AACA,UAAIC,WAAJ;;AAEA,aAAOH,YAAY,KAAK,CAAxB,EAA2B;AACzBG,QAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,YAA3B,CAAd;AACAA,QAAAA,YAAY,IAAI,CAAhB;AAEAE,QAAAA,cAAc,GAAGH,KAAK,CAACC,YAAD,CAAtB;AACAD,QAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACI,WAAD,CAA3B;AACAJ,QAAAA,KAAK,CAACI,WAAD,CAAL,GAAqBD,cAArB;AACD;;AACD,aAAOH,KAAP;AACD,KA9CkB;;AAEjB,SAAKP,KAAL,GAAa;AACXD,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AA0CDgB,EAAAA,MAAM,GAAG;AAAA,UACCvB,QADD,GACc,KAAKH,KADnB,CACCG,QADD;AAEPE,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKc,cAAL,CAAoB,KAAKV,iBAAL,CAAuBJ,QAAvB,CAApB,EAAsDU,GAAtD,CAA2DC,CAAD,IACxD;AAAK,MAAA,GAAG,EAAEA,CAAC,CAACd,KAAF,CAAQ2B,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6Bb,CAA7B,CADF,CADH,CADF;AAOD;;AA1D2C;;AA6D9C,eAAejB,eAAf","sourcesContent":["import React from 'react';\n\nclass ShuffledButtons extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disabledBtn: false,\n    }\n  }\n\n  checkAnswer = (stringToTest) => {\n    const { question } = this.props; \n    if (stringToTest === question.correct_answer) return console.log(stringToTest)\n    return console.log('wrooong')\n  }\n  \n  arrWithAllButtons = (objQuestion) => {\n    const { incorrect_answers } = objQuestion;\n    const { disabledBtn } = this.state;\n\n    const incorrectAnswersArr = incorrect_answers.map((e, index) => \n      (<button disabled={disabledBtn} onClick={() => this.checkAnswer(e)} data-testid={`wrong-answer-${index}`}>{e}</button>));\n  \n    const allAnswers = [\n    <button\n      disabled={disabledBtn}\n      onClick={() => this.checkAnswer(objQuestion.correct_answer)}\n      data-testid=\"correct-answer\">\n        {objQuestion.correct_answer}\n    </button>,\n    ...incorrectAnswersArr,\n    ];\n    return allAnswers;\n  }\n  \n  shuffleAnswers = (array) => {\n    let currentIndex = array.length;\n    let temporaryValue = [];\n    let randomIndex;\n  \n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  }\n  render() {\n    const { question } = this.props;\n    console.log(question)\n    return (\n      <div>\n        {this.shuffleAnswers(this.arrWithAllButtons(question)).map((e) =>\n          (<div key={e.props.children}>{e}</div>))\n        }\n      </div>\n    )\n  }\n}\n\nexport default ShuffledButtons;\n"]},"metadata":{},"sourceType":"module"}