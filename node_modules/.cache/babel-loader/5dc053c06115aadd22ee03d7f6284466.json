{"ast":null,"code":"var _jsxFileName = \"/home/jafet/projetos/sd-03-project-trivia-react-redux-06/src/components/GameScreen/QuestionsInfos.js\";\nimport React from 'react';\nimport './QuestionsInfos.css';\nimport questions from '../dataTest';\nimport ShuffledButtons from './ShuffledButtons';\n\nclass QuestionsInfos extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questionIndex: 0,\n      disabledBtn: false,\n      correctAnswerClass: '',\n      wrongAnswerClass: '',\n      answerChoosed: false,\n      allAnswers: []\n    };\n    this.nextQuestion = this.nextQuestion.bind(this);\n  }\n\n  nextQuestion() {\n    this.setState(state => ({\n      questionIndex: state.questionIndex + 1\n    }));\n  } // checkAnswer = (stringToTest, objQuestion) => {\n  //   this.setState({\n  //     correctAnswerClass: 'correct-answer',\n  //     wrongAnswerClass: 'wrong-answer',\n  //     disabledBtn: true,\n  //     answerChoosed: true,\n  //   });\n  //   if (stringToTest === objQuestion.correct_answer) return console.log(stringToTest)\n  //   return console.log('wrooong')\n  // }\n  // arrWithAllButtons = (objQuestion) => {\n  //   const { incorrect_answers, correct_answer } = objQuestion;\n  //   const { disabledBtn, correctAnswerClass, wrongAnswerClass } = this.state;\n  //   const incorrectAnswersArr = incorrect_answers.map((e, index) => \n  //     (<button\n  //       className={wrongAnswerClass}\n  //       disabled={disabledBtn}\n  //       onClick={() => this.checkAnswer(e, objQuestion)}\n  //       data-testid={`wrong-answer-${index}`}>\n  //         {e}\n  //     </button>));\n  //   const allAnswers = [\n  //     <button\n  //       className={correctAnswerClass}\n  //       disabled={disabledBtn}\n  //       onClick={() => this.checkAnswer(correct_answer, objQuestion)}\n  //       data-testid=\"correct-answer\">\n  //         {correct_answer}\n  //     </button>,\n  //     ...incorrectAnswersArr,\n  //   ];\n  //   return allAnswers;\n  // }\n  // shuffleAnswers = (array) => {\n  //   let currentIndex = array.length;\n  //   let temporaryValue = [];\n  //   let randomIndex;\n  //   while (currentIndex !== 0) {\n  //     randomIndex = Math.floor(Math.random() * currentIndex);\n  //     currentIndex -= 1;\n  //     temporaryValue = array[currentIndex];\n  //     array[currentIndex] = array[randomIndex];\n  //     array[randomIndex] = temporaryValue;\n  //   }\n  //   return array;\n  // }\n  // componentWillMount() {\n  //   const { results } = questions;\n  //   console.log(results)\n  //   const allAnswersArr = results.map((question) => \n  //     this.shuffleAnswers(this.arrWithAllButtons(question)));\n  //   this.setState({ allAnswers: allAnswersArr });\n  // }\n\n\n  render() {\n    const _this$state = this.state,\n          questionIndex = _this$state.questionIndex,\n          allAnswers = _this$state.allAnswers;\n    const results = questions.results;\n    const question = results[questionIndex];\n    return React.createElement(\"section\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"questions-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"questions-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"data-testid\": \"question-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, question.category), React.createElement(\"p\", {\n      \"data-testid\": \"question-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, question.question)), React.createElement(ShuffledButtons, {\n      questionIndex: questionIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.nextQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Pr\\xF3xima\"));\n  }\n\n}\n\nexport default QuestionsInfos;","map":{"version":3,"sources":["/home/jafet/projetos/sd-03-project-trivia-react-redux-06/src/components/GameScreen/QuestionsInfos.js"],"names":["React","questions","ShuffledButtons","QuestionsInfos","Component","constructor","props","state","questionIndex","disabledBtn","correctAnswerClass","wrongAnswerClass","answerChoosed","allAnswers","nextQuestion","bind","setState","render","results","question","category"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AAC3CC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,CADJ;AAEXC,MAAAA,WAAW,EAAE,KAFF;AAGXC,MAAAA,kBAAkB,EAAE,EAHT;AAIXC,MAAAA,gBAAgB,EAAE,EAJP;AAKXC,MAAAA,aAAa,EAAE,KALJ;AAMXC,MAAAA,UAAU,EAAE;AAND,KAAb;AAQA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,GAAG;AACb,SAAKE,QAAL,CAAeT,KAAD,KAAY;AACxBC,MAAAA,aAAa,EAAED,KAAK,CAACC,aAAN,GAAsB;AADb,KAAZ,CAAd;AAGD,GAlB0C,CAoB3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAS,EAAAA,MAAM,GAAG;AAAA,wBAC+B,KAAKV,KADpC;AAAA,UACCC,aADD,eACCA,aADD;AAAA,UACgBK,UADhB,eACgBA,UADhB;AAAA,UAECK,OAFD,GAEajB,SAFb,CAECiB,OAFD;AAGP,UAAMC,QAAQ,GAAGD,OAAO,CAACV,aAAD,CAAxB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,qBAAY,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCW,QAAQ,CAACC,QAAhD,CADF,EAEE;AAAG,qBAAY,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCD,QAAQ,CAACA,QAAzC,CAFF,CADF,EAKE,oBAAC,eAAD;AAAiB,MAAA,aAAa,EAAEX,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,EAQE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKM,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,CADF;AAYD;;AAhG0C;;AAmG7C,eAAeX,cAAf","sourcesContent":["import React from 'react';\nimport './QuestionsInfos.css';\nimport questions from '../dataTest';\nimport ShuffledButtons from './ShuffledButtons';\n\nclass QuestionsInfos extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      questionIndex: 0,\n      disabledBtn: false,\n      correctAnswerClass: '',\n      wrongAnswerClass: '',\n      answerChoosed: false,\n      allAnswers: [],\n    }\n    this.nextQuestion = this.nextQuestion.bind(this);\n  }\n\n  nextQuestion() {\n    this.setState((state) => ({\n      questionIndex: state.questionIndex + 1,\n    }))\n  }\n\n  // checkAnswer = (stringToTest, objQuestion) => {\n  //   this.setState({\n  //     correctAnswerClass: 'correct-answer',\n  //     wrongAnswerClass: 'wrong-answer',\n  //     disabledBtn: true,\n  //     answerChoosed: true,\n  //   });\n  //   if (stringToTest === objQuestion.correct_answer) return console.log(stringToTest)\n  //   return console.log('wrooong')\n  // }\n  \n  // arrWithAllButtons = (objQuestion) => {\n  //   const { incorrect_answers, correct_answer } = objQuestion;\n  //   const { disabledBtn, correctAnswerClass, wrongAnswerClass } = this.state;\n\n  //   const incorrectAnswersArr = incorrect_answers.map((e, index) => \n  //     (<button\n  //       className={wrongAnswerClass}\n  //       disabled={disabledBtn}\n  //       onClick={() => this.checkAnswer(e, objQuestion)}\n  //       data-testid={`wrong-answer-${index}`}>\n  //         {e}\n  //     </button>));\n  \n  //   const allAnswers = [\n  //     <button\n  //       className={correctAnswerClass}\n  //       disabled={disabledBtn}\n  //       onClick={() => this.checkAnswer(correct_answer, objQuestion)}\n  //       data-testid=\"correct-answer\">\n  //         {correct_answer}\n  //     </button>,\n  //     ...incorrectAnswersArr,\n  //   ];\n  //   return allAnswers;\n  // }\n  \n  // shuffleAnswers = (array) => {\n  //   let currentIndex = array.length;\n  //   let temporaryValue = [];\n  //   let randomIndex;\n  \n  //   while (currentIndex !== 0) {\n  //     randomIndex = Math.floor(Math.random() * currentIndex);\n  //     currentIndex -= 1;\n  //     temporaryValue = array[currentIndex];\n  //     array[currentIndex] = array[randomIndex];\n  //     array[randomIndex] = temporaryValue;\n  //   }\n  //   return array;\n  // }\n\n  // componentWillMount() {\n  //   const { results } = questions;\n  //   console.log(results)\n  //   const allAnswersArr = results.map((question) => \n  //     this.shuffleAnswers(this.arrWithAllButtons(question)));\n  //   this.setState({ allAnswers: allAnswersArr });\n  // }\n\n  render() {\n    const { questionIndex, allAnswers } = this.state;\n    const { results } = questions;\n    const question = results[questionIndex];\n    return (\n      <section>\n        <div className=\"questions-container\">\n          <div className=\"questions-header\">\n            <span data-testid=\"question-category\">{question.category}</span>\n            <p data-testid=\"question-text\">{question.question}</p>\n          </div>\n          <ShuffledButtons questionIndex={questionIndex} />\n        </div>\n        <button type=\"button\" onClick={this.nextQuestion}>Pr√≥xima</button>\n      </section>\n    )\n  }\n}\n\nexport default QuestionsInfos;\n\n\n"]},"metadata":{},"sourceType":"module"}