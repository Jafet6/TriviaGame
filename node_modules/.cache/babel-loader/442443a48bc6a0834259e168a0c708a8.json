{"ast":null,"code":"import apiQuestionRequest from'../service/apiQuestionsRequest';export var API_REQUEST='API_REQUEST';export var API_RECEIVE_SUCCESS='API_RECEIVE_SUCCESS';export var API_RECEIVE_FAILURE='API_RECEIVE_FAILURE';var apiRequestControl=function apiRequestControl(){return{type:API_REQUEST};};var receiveApiDataSuccess=function receiveApiDataSuccess(questions){return{type:API_RECEIVE_SUCCESS,questions:questions};};var receiveApiDataFailure=function receiveApiDataFailure(error){return{type:API_RECEIVE_SUCCESS,errorMessage:error};};export function getApiQuestions(token,filters){return function(dispatch){dispatch(apiRequestControl());return apiQuestionRequest(token,filters).then(function(questions){return dispatch(receiveApiDataSuccess(questions));},function(error){return dispatch(receiveApiDataFailure(error.message));});};}","map":{"version":3,"sources":["/home/jafet/GithubPages/triviaGame/src/actions/apiQuestionsAction.js"],"names":["apiQuestionRequest","API_REQUEST","API_RECEIVE_SUCCESS","API_RECEIVE_FAILURE","apiRequestControl","type","receiveApiDataSuccess","questions","receiveApiDataFailure","error","errorMessage","getApiQuestions","token","filters","dispatch","then","message"],"mappings":"AAAA,MAAOA,CAAAA,kBAAP,KAA+B,gCAA/B,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,aAApB,CACP,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,qBAA5B,CACP,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,qBAA5B,CAEP,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,SAAO,CAC/BC,IAAI,CAAEJ,WADyB,CAAP,EAA1B,CAIA,GAAMK,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,SAAD,QAAgB,CAC5CF,IAAI,CAAEH,mBADsC,CAE5CK,SAAS,CAATA,SAF4C,CAAhB,EAA9B,CAKA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,KAAD,QAAY,CACxCJ,IAAI,CAAEH,mBADkC,CAExCQ,YAAY,CAAED,KAF0B,CAAZ,EAA9B,CAKA,MAAO,SAASE,CAAAA,eAAT,CAAyBC,KAAzB,CAAgCC,OAAhC,CAAyC,CAC9C,MAAO,UAACC,QAAD,CAAc,CACnBA,QAAQ,CAACV,iBAAiB,EAAlB,CAAR,CAEA,MAAOJ,CAAAA,kBAAkB,CAACY,KAAD,CAAQC,OAAR,CAAlB,CACJE,IADI,CAEH,SAACR,SAAD,QAAeO,CAAAA,QAAQ,CAACR,qBAAqB,CAACC,SAAD,CAAtB,CAAvB,EAFG,CAGH,SAACE,KAAD,QAAWK,CAAAA,QAAQ,CAACN,qBAAqB,CAACC,KAAK,CAACO,OAAP,CAAtB,CAAnB,EAHG,CAAP,CAKD,CARD,CASD","sourcesContent":["import apiQuestionRequest from '../service/apiQuestionsRequest';\n\nexport const API_REQUEST = 'API_REQUEST';\nexport const API_RECEIVE_SUCCESS = 'API_RECEIVE_SUCCESS';\nexport const API_RECEIVE_FAILURE = 'API_RECEIVE_FAILURE';\n\nconst apiRequestControl = () => ({\n  type: API_REQUEST,\n});\n\nconst receiveApiDataSuccess = (questions) => ({\n  type: API_RECEIVE_SUCCESS,\n  questions,\n});\n\nconst receiveApiDataFailure = (error) => ({\n  type: API_RECEIVE_SUCCESS,\n  errorMessage: error,\n});\n\nexport function getApiQuestions(token, filters) {\n  return (dispatch) => {\n    dispatch(apiRequestControl());\n\n    return apiQuestionRequest(token, filters)\n      .then(\n        (questions) => dispatch(receiveApiDataSuccess(questions)),\n        (error) => dispatch(receiveApiDataFailure(error.message)),\n      );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}